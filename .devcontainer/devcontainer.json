{
    "name": "Node.js & TypeScript",
    "build": {
        "dockerfile": "./Dockerfile",
        "context": "..",
        "args": {
            "USERNAME": "node"
        }
    },
    // ensures we are NOT running as root
    "remoteUser": "node",
    "mounts": [
        // mounts your .aws for use with the AWS CLI
        "source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached",
        // mounts your .ssh for use with git
        "source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
        // saves your command history for use in the next session
        "source=projectname-bashhistory,target=/commandhistory,type=volume"
    ],
    "runArgs": [
        "--network=host",
        "--cpus=8",
        "--memory=15g"
    ],
    // create and empty .ssh and .aws directories incase they don't exist to prevent failure of mounts
    "initializeCommand": "mkdir -p ${localEnv:HOME}${localEnv:USERPROFILE}/.ssh && mkdir -p ${localEnv:HOME}${localEnv:USERPROFILE}/.aws",
    // install deps when the container is updated or created
    "updateContentCommand": {},
    "features": {
        // this is less performant, but couldn't get cdk synth working
        // when running docker outside of docker
        "ghcr.io/devcontainers/features/docker-in-docker:2": {
            // the latest version caused a build failre on 3/6/2024
            // we are pinning for now. Probably should be updated
            // to the latest version once the issue is resolved
            "dockerDashComposeVersion": "2.24.0"
        },
        // for sonar lint
        "ghcr.io/devcontainers/features/aws-cli:1": {},
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "configureZshAsDefaultShell": true,
            "installOhMyZsh": true,
            "installOhMyZshConfig": true,
            "upgradePackages": true,
            "username": "automatic",
            "userUid": "automatic",
            "userGid": "automatic"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "ppa": true,
            "version": "os-provided"
        },
        "ghcr.io/devcontainers/features/github-cli:1": {
            "installDirectlyFromGitHubRelease": true,
            "version": "latest"
        },
        "ghcr.io/devcontainers-contrib/features/aws-cdk:2": {},
        "ghcr.io/devcontainers-contrib/features/projen:1": {}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "streetsidesoftware.code-spell-checker",
                "mhutchie.git-graph",
                "GitHub.copilot",
                "VisualStudioExptTeam.vscodeintellicode",
                "ms-vsliveshare.vsliveshare",
                "GitHub.vscode-pull-request-github",
                "ms-azuretools.vscode-docker",
                "donjayamanne.githistory",
                "github.vscode-github-actions",
                "yzhang.markdown-all-in-one",
                "eamodio.gitlens",
				"fabiospampinato.vscode-highlight",
				"esbenp.prettier-vscode",
				"searKing.preview-vscode",
				"MatthewNespor.vscode-color-identifiers-mode"
            ],
            "settings": {
                "git.enableSmartCommit": true,
                "git.confirmSync": false,
                "git.autofetch": true,
                "github.copilot.enable": {
                    "*": true,
                    "plaintext": true,
                    "markdown": false,
                    "scminput": false,
                    "yaml": true
                },
                "git.pruneOnFetch": true,
                "files.autoSaveDelay": 500,
                "editor.formatOnSave": true,
                "files.autoSave": "afterDelay",
				"highlight.regexes": {
					"((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *TODO(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
						"filterFileRegex": ".*(?<!CHANGELOG.md)$",
						"decorations": [
							{
								"overviewRulerColor": "#ffcc00",
								"backgroundColor": "#ffcc00",
								"color": "#1f1f1f",
								"fontWeight": "bold"
							},
							{
								"backgroundColor": "#ffcc00",
								"color": "#1f1f1f"
							}
						]
					},
					"((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:FIXME|FIX|BUG|UGLY|DEBUG|HACK)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
						"filterFileRegex": ".*(?<!CHANGELOG.md)$",
						"decorations": [
							{
								"overviewRulerColor": "#cc0000",
								"backgroundColor": "#cc0000",
								"color": "#1f1f1f",
								"fontWeight": "bold"
							},
							{
								"backgroundColor": "#cc0000",
								"color": "#1f1f1f"
							}
						]
					},
					"((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:REVIEW|OPTIMIZE|TSC)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
						"filterFileRegex": ".*(?<!CHANGELOG.md)$",
						"decorations": [
							{
								"overviewRulerColor": "#00ccff",
								"backgroundColor": "#00ccff",
								"color": "#1f1f1f",
								"fontWeight": "bold"
							},
							{
								"backgroundColor": "#00ccff",
								"color": "#1f1f1f"
							}
						]
					},
					"((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:IDEA)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
						"filterFileRegex": ".*(?<!CHANGELOG.md)$",
						"decorations": [
							{
								"overviewRulerColor": "#cc00cc",
								"backgroundColor": "#cc00cc",
								"color": "#1f1f1f",
								"fontWeight": "bold"
							},
							{
								"backgroundColor": "#cc00cc",
								"color": "#1f1f1f"
							}
						]
					},
					"((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:COMPLETE)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
						"filterFileRegex": ".*(?<!CHANGELOG.md)$",
						"decorations": [
							{
								"overviewRulerColor": "#00CC5F",
								"backgroundColor": "#00CC44",
								"color": "#1f1f1f",
								"fontWeight": "bold"
							},
							{
								"backgroundColor": "#00CC3D",
								"color": "#1f1f1f"
							}
						]
					},
					"(\\w+)(=)": [
						{
							"color": "#D19A66"
						}
					]
				},
            }
        }
    }
}